#!/usr/bin/env ruby

# This script reads a TSV of (INTEGER) data and writes the data to the metrics
# table.

require_relative '../../dashboard/config/environment'
require 'csv'

# Prompts the user for the TSV file and reads it. The file is expected to have
# two columns, a column of dates (metric_on) and a column of values, as well as
# a header row.
# @return data [Array]
def get_data
  print 'TSV FILE: '
  tsv_file = gets.chomp

  data = []
  CSV.foreach(tsv_file, headers: true, col_sep: "\t") do |row|
    data << row
    puts row
  end
  data
end

# Prompts the user for metadata about the data.
# @return [Hash] The metadata, as a hash.
def get_metadata
  print 'COMPUTED ON: '
  computed_on = gets.chomp

  print 'COMPUTED BY: '
  computed_by = gets.chomp

  print 'METRIC: '
  metric = gets.chomp

  print 'SUBMETRIC: '
  submetric = gets.chomp

  print 'COURSE: '
  course = gets.chomp

  print 'BREAKDOWN: '
  breakdown = gets.chomp

  {
    computed_on: computed_on,
    computed_by: computed_by,
    metric: metric,
    submetric: submetric,
    course: course,
    breakdown: breakdown
  }
end

# Injects the data (together with metadata) into the DB.
# @param metadata [Hash]
# @param data [Hash]
def inject_data(metadata, data)
  data.each do |datum|
    Metric.create!(
      computed_on: metadata[:computed_on],
      computed_by: metadata[:computed_by],
      metric: metadata[:metric],
      submetric: metadata[:submetric],
      course: metadata[:course],
      breakdown: metadata[:breakdown],
      metric_on: datum[0],
      value: datum[1].to_i
    )
  end
end

metadata = get_metadata
data = get_data
inject_data(metadata, data)
