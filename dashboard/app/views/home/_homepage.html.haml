- homepage_data = {courses: @recent_courses}
- homepage_data[:showuitips] = show_ui_tips
- homepage_data[:initialtipsdismissed] = current_user.ui_tip_dismissed_homepage_header
- homepage_data[:userid] = current_user.id
- homepage_data[:valid_grades] = Section.valid_grades
- homepage_data[:topCourse] = @top_course
- homepage_data[:isenglish] = @is_english

- if current_user
  - provider = current_user.provider
  - provider = 'google_classroom' if provider == 'google_oauth2'
  - homepage_data[:provider] = provider
  - if current_user.teacher?
    - homepage_data[:isTeacher] = true
    - homepage_data[:joined_sections] = @student_sections
    - homepage_data[:announcement] = DCDO.get('census_announcement', nil)
  - else
    - homepage_data[:sections] = @student_sections
    - homepage_data[:isTeacher] = false
    - if current_user.teacher_managed_account?
      - homepage_data[:canLeave] = false
    - else
      - homepage_data[:canLeave] = true
  - homepage_data[:canViewAdvancedTools] = !(current_user.under_13? && current_user.terms_version.nil?)

- content_for(:head) do
  %script{src: minifiable_asset_path('js/home/_homepage.js'), data: {homepage: homepage_data.to_json}}

-# Components generated by HAML which might be pulled in and displayed by the React model.
.hiddenComponents{style: "display: none"}
  #flashes
    = show_flashes.html_safe

.clear{style: "clear: both"}

- if current_user
  - if current_user.teacher?
    #terms_reminder
      - unless current_user.accepted_latest_terms?
        = render template: 'api/accept_terms_reminder'
        = render partial: 'layouts/terms_interstitial'

#homepage-container

#workshop-links
  -if can? :read, Pd::Application::ApplicationBase
    %h1
      Application Dashboard
    = link_to pd_application_dashboard_path do
      %h3
        Manage Applications
  -if can? :read, Pd::Workshop
    %h1
      Workshop Dashboard
    %a{href:'/pd/workshop_dashboard'}
      %h3
        Manage PD Workshops
    -if current_user.permission?(UserPermission::WORKSHOP_ADMIN)
      = link_to pd_workshop_admins_path do
        %h3
          Directory for Workshop Admins
  -if current_user.permission?(UserPermission::CREATE_PROFESSIONAL_DEVELOPMENT_WORKSHOP) || current_user.permission?(UserPermission::WORKSHOP_ADMIN)
    %h1
      Old CSF Workshop Dashboard
    %a{href: CDO.code_org_url('/manage-professional-development-workshops')}
      %h3
        Manage Workshops
    %a{href: CDO.code_org_url('/professional-development-workshops')}
      %h3
        View Workshop Map
    %a{href:'https://docs.google.com/a/code.org/document/d/1lHBthPKdKx3G-khyWYhVYQlfdi9Sa1L9EcOxEa-Xt14/edit'}
      %h3
        View Affiliate Playbook

:javascript

  $(document).ready(function() {
    window.cleverTakeoverManager = new CleverTakeoverManager({
      cleverLinkFlag: "#{session['clever_link_flag']}",
      userIDToMerge: "#{session['clever_takeover_id']}",
      mergeAuthToken: "#{session['clever_takeover_token']}",
    });
  });
