name 'U3L19 - variable scope explanation'
title 'U3L19 - variable scope explanation'
description 'description here'
markdown <<MARKDOWN
## Where you create your variables matters

<table width=800>
<tr>
<td width=50% valign=top>
You may have noticed in the last app that the variable was created at the beginning of the code along with the creation of the buttons and text labels.  (Code shown to the right).<br><br>

This is because we wanted the count variable to be a <strong>global variable</strong> within the app - a global variable is a variable that the code inside every function or event handler can see and modify.
</td>
<td>
<pre style="display: inline-block">
button("myButton","go up"); 
<strong>var count = 0;</strong>
textLabel("myLabel", "Count is: "+count);

onEvent("myButton", "click", function(){
   count = count+1;
   setText("myLabel", "Count is: "+count);
});

</pre>
</td>
</tr>
</table>
<hr/>
<table width=800>
<tr>
<td width=50% valign=top>
<p>But this raises an interesting question. What would happen if the variable were created inside the event handler, like the example shown to the right.</p>
<p>
Hopefully you're thinking: wait, that makes no sense. And it doesn't make sense. But it's important to understand what this code is actually saying. It's saying:
</p><p>
<strong>When the button is clicked, create a new variable called count, set it to 0, and then add 1 to it</strong>.

The result would be that the count would always show up as 1 in the display.
</P>
</td>
<td>
<pre style="display: inline-block">
button("myButton","go up");
textLabel("myLabel", "Count is: 0");

onEvent("myButton", "click", function(){
   <strong>var count=0;</strong>
   count = count+1;
   setText("myLabel", "Count is: "+count);
});

</pre>
</td>
</tr>
</table>

### misconception alert

But where this problem really trips up new programmers is *much more subtle* and is also related to your mental model of how computers work.  

The issue is a kind of error that's an example of a **semantic error** - an error in which there is nothing technically wrong with the code, nothing that the JavaScript interpreter can detect because the code is correct - all the syntax is right: everything is spelled right, you've got all the semi-colons, parenthesis and curly braces right, etc.  These kinds of errors are devilish to track down because there are no error messages leaping out at you to point out what's wrong.

Instead you have to study the code and figure out what's wrong.  So, check out this code:

<pre style="display: inline-block">
button("myButton","go up");
var count = 0;
textLabel("myLabel", "Count is: "+count);

onEvent("myButton", "click", function(){
   var count = count+1;
   setText("myLabel", "Count is: "+count);
});
</pre>

The error might not jump out at you.  But when you run the program on the next page you'll immediately se the problem.  Your job is to find and fix the error.

<a class="btn btn-large btn-primary next-stage submitButton">Continue to try this out.</a>




MARKDOWN