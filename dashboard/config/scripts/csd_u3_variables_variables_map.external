name 'CSD U3 Variables variables map'
css 'unplugged'
markdown <<MARKDOWN
# Variables

A variable lets you store a single value in your computer's memory with a descriptive name. Using variables lets you easily refer to the same value many times in your program or save a number that you'd like to refer to later.

## Creating Variables

![](https://images.code.org/0688015631dab105e698fad8f0c04df1-image-1491866109652.13.54 PM.png)

The command `var` will create a new variable with the label that you give it. This variable has the label `size`.

## Assigning Values

![](https://images.code.org/38b3aaec6f68ba5ff1db232864f14be6-image-1491866203013.14.14 PM.png)

The assignment operator `=` will assign a new value to your variable. This command assigned 100 to the variable `size`. The variable must always be on the left side. You would read this command as "size gets 100" since size is getting a new value of 100. Any old values it might have been assigned are lost forever.

## Using a Value

![](https://images.code.org/7dfc69132ca6ffade590c5ab787bf7c9-image-1491866329997.14.49 PM.png)

In order to use a variable's value, place its label in the spot in your code you want to use it. This command uses the value in `size` to set the width and height of the ellipse. When 

## Initializing

![](https://images.code.org/2b18f693944e59345ee1f4e65dab1b40-image-1491866560120.22.26 PM.png)

Usually you'll want to give a variable its first (or "initial") value right away. You can initialize a variable in a single command by combining the `var` and `=` commands.

After you initialize a variable you don't need to use the `var` command to assign a new value. Just use the `=` as normal.

![](https://images.code.org/7e1b4e26549234e8fd4caadb68d4815e-image-1491867896796.36.18 PM.png)

## Naming Rules

Good variable labels **indicate how the variable will be used in the program**. The label `size` is a good choice for a variable that controls the size of something. You could always choose `potato` or `s`, but confusing or unclear names make your program hard to read for you and others.

There are a **few rules** when choosing labels:

* Labels **cannot include spaces**. For example, `size of rectangle` would generate an error.
* Labels with multiple words can be easier to read in **camelCase**. Good examples of camelCase are `sizeOfRectangle` or `aReallyLongLabelName`
* Labels **cannot begin with a number**. For example, `4sides` and `2morrow` will generate errors.
* Be very careful with **spelling**.
* Labels are **case-sensitive**. This means `size` is not the same as `Size` or `SIZE`.


MARKDOWN
